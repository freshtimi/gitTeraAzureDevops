trigger: none
 # branches:
  #  include:
   #   - master
  #paths:
   # include:
    #  - /cleanup-hub.txt

resources:
  pipelines:
  - pipeline: "HubDestroy"
    source: "SpokeDestroy)"
    trigger: 
      branches:
      - master

   

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: terraform-VG
  - name: subscription_id
    value: "ea9b2fd6-81b0-4f7c-a5fc-db1ca245f08f"
  - name: application_id
    value: "b40294a4-31d6-4813-8912-ea2e1cc663cd"
  - name: tenant_id
    value: "d10dd6b8-9cc8-441c-b693-d3fd45c4dd29"
  - name: storage_accounts
    value: "femiterastore"
  - name: blob_storage
    value: terracon2
  - name: state_file
    value: tf-statefile-hub.state
  - name: sa-resource_group
    value: MISC5

steps:
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: "Install Terraform"
    inputs:
      terraformVersion: '0.12.26'
  - script: terraform version
    displayName: "Terraform Version"
  - script:  az login --service-principal -u $(application_id) -p $(SPN-secret) --tenant $(tenant_id)
    displayName: "Log Into Azure"
  - script: terraform init -backend-config=resource_group_name=$(sa-resource_group) -backend-config="storage_account_name=$(storage_accounts)" -backend-config="container_name=$(blob_storage)" -backend-config="access_key=$(SaS-key)" -backend-config="key=$(state_file)"
    displayName: "Terraform Init"
    workingDirectory: $(System.DefaultWorkingDirectory)/Terraform/Networking/Deployments/Network-Deployment/Hub-Deploy
  - script: terraform destroy -var="client_id=$(application_id)" -var="client_secret=$(SPN-secret)" -var="tenant_id=$(tenant_id)" -var="subscription_id=$(subscription_id)" -var-file="Hub.tfvars" -auto-approve
    displayName: "Terraform Destroy"
    workingDirectory: $(System.DefaultWorkingDirectory)/Terraform/Networking/Deployments/Network-Deployment/Hub-Deploy
